# ============================================================================
# Claude Code Integration Configuration
# ============================================================================

# Enable/disable Claude Code voice integration
# When enabled, you can use voice commands like "jarvis add error handling"
# to execute coding tasks via Claude Code
ENABLE_CLAUDE_CODE=true

# Trigger words for Claude Code (comma-separated, case-insensitive)
# When transcribed text starts with any of these words, it's sent to Claude Code
# Examples:
#   "jarvis add error handling" → triggers with "jarvis"
#   "hey jarvis fix this bug" → triggers with "hey jarvis"
#   "code assistant refactor" → triggers with "code assistant"
CLAUDE_CODE_TRIGGER_WORDS=jarvis,hey jarvis,jarvis code

# Project path where Claude Code operates
# Claude Code will read/edit/create files within this directory
# Default: current JARVIS project directory
# CLAUDE_CODE_PROJECT_PATH=/home/paul/Work/jarvis

# Tools that Claude Code can use (comma-separated)
# Available tools:
#   - Read: Read files
#   - Edit: Edit existing files
#   - Write: Create new files
#   - Bash: Execute bash commands
#   - Grep: Search code
#   - Glob: Find files by pattern
#
# For safety, start with just Read,Edit and add others as needed
CLAUDE_CODE_ALLOWED_TOOLS=Read,Edit,Write,Bash,Grep,Glob

# ============================================================================
# Usage Examples:
# ============================================================================
#
# Say (with PTT held):
#   "jarvis add error handling to the transcription module"
#   "hey jarvis fix the bug in main.py"
#   "jarvis create unit tests for the audio capture"
#   "jarvis refactor the config class"
#
# See docs/CLAUDE_CODE_INTEGRATION.md for full documentation
# ============================================================================
